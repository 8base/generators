// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should generate delete form by the table name 1`] = `
"import React from 'react';
import gql from 'graphql-tag';
import { Form as FormLogic } from '@8base/forms';
import { Dialog, Button, ModalContext } from '@8base/boost';
import { graphql } from 'react-apollo';

const PROPERTY_DELETE_MUTATION = gql\`
  mutation PropertyDelete($id: ID!) {
    propertyDelete(data: { id: $id }) {
      success
    }
  }
\`;

const enhancer = graphql(PROPERTY_DELETE_MUTATION, {
  name: 'propertyDelete',
  options: {
    refetchQueries: ['PropertiesTableContent', 'PropertiesList'],
    context: {
      TOAST_SUCCESS_MESSAGE: 'Property successfuly deleted',
    },
  },
});

const PropertyDeleteDialog = enhancer(
  class PropertyDeleteDialog extends React.Component {
    static contextType = ModalContext;

    createOnSubmit = id => async () => {
      await this.props.propertyDelete({ variables: { id } });

      this.context.closeModal('PROPERTY_DELETE_DIALOG_ID');
    };

    onClose = () => {
      this.context.closeModal('PROPERTY_DELETE_DIALOG_ID');
    };

    renderFormContent = ({ handleSubmit, invalid, submitting }) => (
      <form onSubmit={handleSubmit}>
        <Dialog.Header title=\\"Delete Property\\" onClose={this.onClose} />
        <Dialog.Body scrollable>Are you really want to delete listing?</Dialog.Body>
        <Dialog.Footer>
          <Button color=\\"neutral\\" variant=\\"outlined\\" disabled={submitting} onClick={this.onClose}>
            Cancel
          </Button>
          <Button color=\\"danger\\" type=\\"submit\\" disabled={invalid} loading={submitting}>
            Delete Property
          </Button>
        </Dialog.Footer>
      </form>
    );

    renderContent = ({ args }) => {
      return (
        <FormLogic onSubmit={this.createOnSubmit(args.id)} formatRelationToIds>
          {this.renderFormContent}
        </FormLogic>
      );
    };

    render() {
      return (
        <Dialog id={'PROPERTY_DELETE_DIALOG_ID'} size=\\"sm\\">
          {this.renderContent}
        </Dialog>
      );
    }
  }
);

export { PropertyDeleteDialog };
"
`;
