import React from 'react';
import gql from 'graphql-tag';
import { Form as FormLogic } from '@8base/forms';
import { Dialog, Button, ModalContext } from '@8base/boost';
import { graphql } from 'react-apollo';

const <%= changeCase.upper(screenName)%>_DELETE_MUTATION = gql`
  mutation <%= changeCase.pascal(screenName)%>Delete($id: ID!) {
    <%= SchemaNameGenerator.getDeleteItemFieldName(tableName)%>(data: { id: $id }) {
      success
    }
  }
`;

const enhancer = graphql(<%= changeCase.upper(screenName)%>_DELETE_MUTATION, {
  name: '<%= SchemaNameGenerator.getDeleteItemFieldName(tableName)%>',
  options: {
    refetchQueries: ['<%=changeCase.pascal(tableName)%>TableContent', '<%= changeCase.pascal(SchemaNameGenerator.getTableListFieldName(tableName))%>'],
    context: {
      TOAST_SUCCESS_MESSAGE: '<%= changeCase.pascal(screenName)%> successfuly deleted',
    },
  },
});

const <%= changeCase.pascal(screenName)%>DeleteDialog = enhancer(
  class <%= changeCase.pascal(screenName)%>DeleteDialog extends React.Component {
    static contextType = ModalContext;

    createOnSubmit = id => async () => {
      await this.props.<%= SchemaNameGenerator.getDeleteItemFieldName(tableName)%>({ variables: { id } });

      this.context.closeModal('<%= changeCase.upper(screenName)%>_DELETE_DIALOG_ID');
    };

    onClose = () => {
      this.context.closeModal('<%= changeCase.upper(screenName)%>_DELETE_DIALOG_ID');
    };

    renderFormContent = ({ handleSubmit, invalid, submitting }) => (
      <form onSubmit={handleSubmit}>
        <Dialog.Header title="Delete <%= changeCase.pascal(screenName)%>" onClose={this.onClose} />
        <Dialog.Body scrollable>Are you really want to delete listing?</Dialog.Body>
        <Dialog.Footer>
          <Button color="neutral" variant="outlined" disabled={submitting} onClick={this.onClose}>
            Cancel
          </Button>
          <Button color="danger" type="submit" disabled={invalid} loading={submitting}>
            Delete <%= changeCase.pascal(screenName)%>
          </Button>
        </Dialog.Footer>
      </form>
    );

    renderContent = ({ args }) => {
      return <FormLogic onSubmit={this.createOnSubmit(args.id)}>{this.renderFormContent}</FormLogic>;
    };

    render() {
      return (
        <Dialog id={'<%= changeCase.upper(screenName)%>_DELETE_DIALOG_ID'} size="sm">
          {this.renderContent}
        </Dialog>
      );
    }
  }
);

export { <%= changeCase.pascal(screenName)%>DeleteDialog };
